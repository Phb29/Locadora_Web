// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebLocadora.Context;

#nullable disable

namespace WebLocadora.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220720010729_AlugarFilmeItem")]
    partial class AlugarFilmeItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebLocadora.Models.AlugarFilmeItem", b =>
                {
                    b.Property<int>("AlugarFilmeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlugarFilmeItemId"), 1L, 1);

                    b.Property<string>("AlugarFilmeId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("AlugarFilmeItemId");

                    b.ToTable("AlugarFilmeItems");
                });

            modelBuilder.Entity("WebLocadora.Models.Filme", b =>
                {
                    b.Property<int>("FilmeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmeId"), 1L, 1);

                    b.Property<int?>("AlugarFilmeItemId")
                        .HasColumnType("int");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<int>("FilmeCategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("FilmeImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmeNome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("Preferido")
                        .HasColumnType("bit");

                    b.HasKey("FilmeId");

                    b.HasIndex("AlugarFilmeItemId");

                    b.HasIndex("FilmeCategoriaId");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("WebLocadora.Models.FilmeCategoria", b =>
                {
                    b.Property<int>("FilmeCategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmeCategoriaId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeGenero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FilmeCategoriaId");

                    b.ToTable("FilmeCategorias");
                });

            modelBuilder.Entity("WebLocadora.Models.Filme", b =>
                {
                    b.HasOne("WebLocadora.Models.AlugarFilmeItem", null)
                        .WithMany("Filmes")
                        .HasForeignKey("AlugarFilmeItemId");

                    b.HasOne("WebLocadora.Models.FilmeCategoria", "FilmeCategoria")
                        .WithMany("Filme")
                        .HasForeignKey("FilmeCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmeCategoria");
                });

            modelBuilder.Entity("WebLocadora.Models.AlugarFilmeItem", b =>
                {
                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("WebLocadora.Models.FilmeCategoria", b =>
                {
                    b.Navigation("Filme");
                });
#pragma warning restore 612, 618
        }
    }
}
